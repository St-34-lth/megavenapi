Let's assume that you are a software developer that needs to develop an e-commerce (shopping cart) application that integrates with Megaventory. Certain information will need to be transferred from your application to your Megaventory account via the Megaventory API.
 
I. The following steps must be implemented via megaventory.com:
1. Create a new Megaventory account (sign-up at www.megaventory.com).

2. Once you login, complete the set-up (making sure to enable Orders) and then, under My Profile generate a new APIKEY and click update. You will need this key for your implementation. See also: http://help.megaventory.com/en/articles/74873-how-do-i-get-started-with-the-api

 
II. The following steps must be implemented using your application:

 
1. Develop a simple web application that integrates with the following Megaventory entities using the Megaventory API:

a) Product

b) SupplierClient

c) InventoryLocation

d) Tax

e) Discount

f) SalesOrder

Implementation Notes:

You do not need to create a front-end for your application.
You do not need to cover all API endpoints, just the Update endpoints should be enough for this project.
Your application should follow OOP best practices, and will be mostly evaluated based on your design decisions.
2. Use your application to insert the following entities to your account:

a. Product:

SKU: 1112256 
Description: Nike shoes
Sales Price: 99.99 
Purchase Price: 44.99  


b. Client:

Name: babis   
E-mail: babis@exampletest.com 
Shipping Address: Example 8, Athens 
Phone: 1235698967  


c. Inventory Location:

Abbreviation: Test
Name: Test Project Location
Address: Example 20, Athens 

d. Tax: 

Name: VAT
Description: VAT GR
Value: 24%

e. Discount

Name: Loyalty
Description: Loyalty Customer Discount
Value: 50%


3. Create a Sales Order with Verified status, using the Client, Product and Location you inserted, and applying the Tax and Discount you inserted. 


{'APIKEY': '2795d72f4d21ccdf@m128003', 
 'mvSalesOrder': {
'SalesOrderId': 3, 'SalesOrderTypeId': 3, 'SalesOrderTypeAbbreviation': 'SO', 'SalesOrderTypeDescription': 'Sales Order', 'SalesOrderNo': '1', 'SalesOrderStatus': 'Verified', 'SalesOrderClientName': 'Babis2', 'SalesOrderInventoryLocationID': 3, 'SalesOrderBillingAddress': 'Example 20, Athens', 'SalesOrderShippingAddress': 'Example 8, Athens', 'SalesOrderTotalQuantity': 1, 'SalesOrderAmountSubtotalWithoutTaxAndDiscount': 99.99, 'SalesOrderAmountTotalDiscount': 49.995,
          'SalesOrderAmountTotalTax': 23.9976, 
          'SalesOrderAmountGrandTotal': 73.99259999999998 
          'SalesOrderDetails': 
                    [
                              {'SalesOrderRowProductID': 0, 'SalesOrderRowProductSKU': '1112256', 'SalesOrderRowProductDescription': 'Nike shoes', 'SalesOrderRowQuantity': 1, 'SalesOrderRowUnitPriceWithoutTaxOrDiscount': 99.99, 'SalesOrderTotalTaxAmount': 23.9976, 'SalesOrderRowTotalDiscountAmount': 49.995, 'SalesOrderRowTotalAmount': 73.99259999999998}
                    ], 
                    'SalesOrderShipDocumentTypeID': 3}, 
          'mvRecordAction': 'Insert'}